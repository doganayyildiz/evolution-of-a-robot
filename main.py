from machine import Pin, I2C, PWM, ADC
from servo import Servo
from sh1106 import SH1106_I2C
import framebuf
import utime
#---------- display------------
WIDTH = 128
HEIGHT = 64
 
i2c = I2C(0, scl=Pin(17), sda=Pin(16), freq=200000)
oled = SH1106_I2C(WIDTH, HEIGHT, i2c)

oled.rotate(True)
#-------------------------------

buzzer = PWM(Pin(1))
#-------------------------------

motor1_pin = 18
motor1 = Servo(motor1_pin)

motor2_pin = 13
motor2 = Servo(motor2_pin)
#-------------------------------


#-------------------------------
def eyes(t):
    oled.fill(0)
    oled.rect(19,12,40,40,framebuf.MONO_HLSB,1)
    oled.rect(69,12,40,40,framebuf.MONO_HLSB,1)
    oled.show()
    utime.sleep(t)
    
def blink():
    oled.fill(0)
    oled.rect(19,30,40,5,framebuf.MONO_HLSB,1)
    oled.rect(69,30,40,5,framebuf.MONO_HLSB,1)
    oled.show()
    utime.sleep(0.02)

def left(t):
    oled.fill(0)
    oled.rect(15,12,40,40,framebuf.MONO_HLSB,1)
    oled.rect(65,14,33,33,framebuf.MONO_HLSB,1)
    oled.show()
    utime.sleep(t)

def right(t):
    oled.fill(0)
    oled.rect(30,14,33,33,framebuf.MONO_HLSB,1)
    oled.rect(73,12,40,40,framebuf.MONO_HLSB,1)
    oled.show()
    utime.sleep(t)

def angry(t):
    oled.fill(0)
    oled.rect(19,25,40,25,framebuf.MONO_HLSB,1)
    oled.rect(69,25,40,25,framebuf.MONO_HLSB,1)
    
    for i in range(0,10):
        oled.line(58,24,19,24-i,framebuf.MONO_HLSB)
        oled.line(69,25,108,25-i,framebuf.MONO_HLSB)
    oled.show()
    utime.sleep(t)
def sad(t):
    oled.fill(0)
    oled.rect(19,25,40,25,framebuf.MONO_HLSB,1)
    oled.rect(69,25,40,25,framebuf.MONO_HLSB,1)
    
    for i in range(0,10):
        oled.line(19,25,58,24-i,framebuf.MONO_HLSB)
        oled.line(108,25,69,24-i,framebuf.MONO_HLSB)
    oled.show()
    utime.sleep(t)
def happy(t):
    oled.fill(0)
    oled.rect(19,15,40,10,framebuf.MONO_HLSB,1)
    oled.rect(69,15,40,10,framebuf.MONO_HLSB,1)
    oled.show()
    utime.sleep(t)


notes = [262,294,330,350,392,440,494]

def sound():
    for i in range (0,2):
        for i in notes[::-1]:
           buzzer.freq(i)
           buzzer.duty_u16(6000)
           utime.sleep(0.02)
           buzzer.duty_u16(0)
        utime.sleep(0.2)
def sound2():
    for i in range (0,2):
        for i in notes:
           buzzer.freq(i)
           buzzer.duty_u16(6000)
           utime.sleep(0.02)
           buzzer.duty_u16(0)
        utime.sleep(0.1)
        
def sound_wakeup():
    buzzer.freq(523)
    buzzer.duty_u16(6000)
    utime.sleep(0.2)
    buzzer.duty_u16(0)
    
    buzzer.freq(494)
    buzzer.duty_u16(1000)
    utime.sleep(0.2)
    buzzer.duty_u16(0)
    
    buzzer.freq(392)
    buzzer.duty_u16(1000)
    utime.sleep(0.3)
    buzzer.duty_u16(0)
    
    utime.sleep(0.5)


ataturk = bytearray(b'\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00 \x00\x00\x00\x00\x00\x00\x0f\xc0\x00\x00\x00\x00\x00\x00}\x80\x00\x00\x00\x00\x00\x01\xf7\x00\x00\x00\x00\x00\x00\x07\xdf\x00\x00\x00\x00\x00\x00\x1f\xfe\x00\x00\x00\x00\x00\x00=\xfa\x00\x00\x00\x00\x00\x00oH\x00\x00\x00\x00\x00\x00\xfe\x10\x00\x00\x00\x00\x00\x01\xf60\x00\x00\x00\x00\x00\x03\xbc<\x00\x00\x00\x00\x00\x07\xf0\xfc\x00\x00\x00\x00\x00\x06\xf3\xf8\x00\x00\x00\x00\x00\x0f\xdf`\x00\x00\x00\x00\x00\x0f\x7f\xf3\x80\x00\x00\x00\x00\x1d\xfb\xbe\x00\x00\x00\x00\x00\x1f\xfe\xfc\x00`\x06\x00\x00?\xb7\xe8\x00\xff\xff\x00\x10-\xff\xf8\x00\x7f\xff\xefX?\xfd\xb0\x00\xfd\xfb\xf7\xf0>\xdf\xf8\x01\xc3\xaf\xbf\xf0;\xf7\xfc\x03\x9b\xfe=\xa0\x7f\xfe\xdc\x01\xfc\xfe\x0f\xe0/_\xfc\x00Q\xfb\x04\xe0<\x81\xe8\x00\x03D\x00\xa0=`p\x00\x00\x00\x00\x009\xf0\x10\x00\x00\x00\x00\x003\x80\x00\x00\x00\x00\x00\x00\x1b\x00\x00\x00\x00\x00\x00\x00\x19\x9e\x00\x00\x00\x00\x00\x00\x19?\x00\n\xa0\x00\x00@\x19\xbf\x80\x1f\xf5\x00/\xe0\x0c3\x00\x0f\xdf\x83\x7f\xe0\x0c1\x80\x03\x7f\x85\xff\x80\x0f\x13\x80\x01\xfe\x00\xea\x80\x07\x01\x80\x01\xf6\x00\x00\x00\x07\xc1\x80\x00|\x00\x04\x00\x03\xf0\xc0\x00l\x00\x00\x00\x03\xfe\x00\x00<\x00\x00\x00\x01\x7f\x80\x00\x18\x06\xfe\x00\x01\xee\xf0\x00\x0c\x1f\xd7\x00\x00\xff\xc0\x00\x08\x18\x00\x80\x00w\xe0\x00\x00\x00\x04\x00\x00~\xa0\x00\x00`\x00\x00\x008\x00\x00\x00`\x00\x00\x00\x10\x00\x00\x05`\x00\x00\x00\x00\x00\x00\x0f\xe0\x00\x00\x00\x00\x00\x00\x1f\xe0\x00\x00\x00\x00\x00\x00\x1bp\x02\x80\x00\x00\x00\x00?\xfe/\xc0\x00\x00\x00\x00~\xff\xff\xe0\x00\x00\x00\x00\xf7\xdf\xfe\x80\x00\x00\x00\x00\x7f\xfb\xbb\x00\x00\x00\x00\x00\x1d\xbe\xfe\x00\x00\x00\x00\x00\x07\xf7\xf0\x00\x00\x00\x00\x00\x03\xff\xd0\x00\x00\x00\x00\x00\x00\xdd\xe0\x00\x00\x00\x00\x00\x00\x7f\x80\x00\x00\x00\x00\x00\x00\x1f\x80\x00\x00\x00\x00\x00\x00\r\x00\x00\x00\x00\x00\x00\x00\x06\x00\x00\x00\x00\x00\x00\x00\x01\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00')
a = framebuf.FrameBuffer(ataturk,64,64,framebuf.MONO_HLSB)

bayram = bytearray(b'\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00@\x00\x00*\x80\x00\x00U\x00\x00\x00\x00\x00\x01\xc0\x00\x01\xffx\x00\x03\xdf\xf0\x00\x00\x00\x00\x07`\x00\x0e\xa5\xad\x00\rj\xac\x00\x00\x00\x00\x1d\xb0\x00\x15\xddv\x80>\xb6\xff\x00\x00\x00\x00v\xdc\x00~\xb7\xab\xc0\xd5\xdb\x05\xc0\x00\x00\x01\xdbj\x00\xabj\xddav\xb4\x00\xa0\x00\x00\x07m\xbe\x01\xed\xbdv\xb3[@\x000\x00\x00\x1d\xb6\xd5\x03Z\xd7\xab\xc5\xd5\x80\x00\x08\x00\x005[n\x05\xb7j\xddf\xbe\x00\x00\x04\x00\x00\x1e\xed\xb6\x06\xda\xddkM\xd4\x00\x00\x00\x00\x00\x0bV\xda\x0foav\x96\xb4\x00\x00\x00\x00\x00\r\xbbn\x1a\xf5\x00\r\x9bh\x00\x00\x00\x00\x00\x06\xd5\xb6\x17Z\x00\x0b-\xb0\x00\x00\x00\x00\x00\x05\xbe\xdb=\xd4\x00\x026\xd0\x00\x00\x00\x80\x00\x06\x8bn\x16\xb8\x00\x03[`\x00\x00\x00@\x00\x02\x1a\xb5;\xd0\x00\x00m\xa0\x00\x00\x00@\x00\x00\x17\xde6\xb0\x00\x00V\xc0\x00\x00\x00\xe0\x80\x00\x1a\xaam\xd0\x00\x00{@\x00\x00\x00U\x80\x00\r\xf7;`\x00\x00U\xc0\x00\x00\x00n\x00\x00\x16\x9cn\xc0\x00\x00\xde\x80\x00\x00\x02\xda\x00\x00\x1bk[`\x00\x00k@\x00\x00\x1d\xb4\x00\x00\r\xbev\xe0\x00\x00\xb5\xc0\x00\x00\x03n\x00\x00\x16\xd5;\xa0\x00\x00\xde\x80\x00\x00\x00\xda\x00\x00\x1bv]`\x00\x00k@\x00\x00\x00m\x00\x00\r\xaek\xb0\x00\x00\xda\xc0\x00\x00\x00c\x80\x00\x16\xda>\xd0\x00\x01m\x80\x00\x00\x00\xa0\x00\x00\x0bn+p\x00\x01\xb6\xc0\x00\x00\x00@\x00\x00\x1d\xb6=\xac\x00\x03k\x10\x00\x00\x00\x80\x00\x00\n\xdb\x16\xf4\x00\x06\xdd\xb0\x00\x00\x00\x00\x00\x00\x1fn\x1b^\x00\r\xb6(\x00\x00\x00\x00\x00\x00\n\xb6\r\xeb\x806\xdb4\x00\x00\x00\x00\x00\x00\x17\xda\x0e\xb5u\xdbll\x00\x00\x02\x00\x00\x00\x1an\x03\xaf\xbbm\xb6\xda\x00\x00\x04\x00\x00\x00\r\xb6\x05uV\xb6\xd8\xb7\x00\x00\x08\x00\x00\x00\x16\xdb\x03\xbb\xed\xdbi\xda\xc0\x00\x10\x00\x00\x00\x0bn\x00\xd6\xb6\xb5\xb2\xed\xa0\x00`\x00\x00\x00\x1d\xb5\x00m[\xde\xc0\xb6\xfd\x05\xc0\x00\x00\x00\x0bn\x00;\xedk@m\xab{\x00\x00\x00\x00\x1d\xb8\x00\r[Z\x80\x1b]\xd6\x00\x00\x00\x00\n\xd0\x00\x07m\xb4\x00\r\xea\xb8\x00\x00\x00\x00\x17`\x00\x00\xdbh\x00\x01_\xc0\x00\x00\x00\x00\r\x80\x00\x00\x04\x80\x00\x00\x10\x00\x00\x00\x00\x00\x1a\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\r\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x14\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x08\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x01\x01\x00\x00\x00\x80!\x00\x84\x02\x00\x00\x00\x00\x1ai1\xaa\xaaU\x8aJR\xb5U\x00\x00\x00\n\xadRZ\xad\xa9m\xe5\x9a\xc5l\x80\x00\x00\tiRN\xd2\xac\nEE\xa4$\x80\x00\x00\n\xacQR\xae\x85md\xaa\xd7)\x00\x00\x00\x01\x12\x11)\x10\xa4\x02\x814R\x06\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00')
b = framebuf.FrameBuffer(bayram,110,62,framebuf.MONO_HLSB)


while True:
    eyes(1)
    blink()
    eyes(1)
    
    
    
    
    
    